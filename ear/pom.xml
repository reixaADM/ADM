<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.eap.quickstarts</groupId>
        <artifactId>kitchensink-ear</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>kitchensink-ear-ear</artifactId>
    <packaging>ear</packaging>

    <name>kitchensink-ear - ear</name>
    <description>This kitchensink project demonstrates how to use JSF, CDI, JAX-RS, EJB, JPA, and Bean Validation in an application packaged as an EAR; this is the EAR POM file</description>

    <profiles>
        <profile>
            <!-- Run with: mvn clean test -Parq-managed -->
            <id>arq-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!--<plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>2.22.1</version>

                            <executions>
                                <execution>
                                    <id>test</id>
                                    <phase>test</phase>
                                    <goals>
                                        <goal>test</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>-->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!--<configuration>
                            <environmentVariables>
                                <JBOSS_HOME>/Users/jorgemachado/workspace/ES/jboss-eap-7.1</JBOSS_HOME>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-managed</arquillian.launch>
                                <serverConfig>standalone.xml</serverConfig>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                        </configuration>-->
                    </plugin>

                    <!--
                        Estas configurações são necessárias porque o package ear não vai compilar nada nem copiar
                        o ficheiro de recursos que é necessário para o modulo do Arquillian saber onde está o JBOSS
                        Ver aqui os lifecycles do MAVEN para confirmar que o EAR não compila nem copia recursos
                        https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
                    -->
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <id>process-test-resources</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>testResources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>1.1.7.Final</version>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>2.2.0-beta-1</version>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-remote</artifactId>
            <version>1.0.0.Alpha5</version>
            <scope>test</scope>
        </dependency>


        <!-- Depend on the EJB module and WAR so that we can package them -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kitchensink-ear-ejb</artifactId>
            <type>ejb</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kitchensink-ear-web</artifactId>
            <type>war</type>
        </dependency>
        <!--#############################################################
        #####   ARQUILLIAN_DEPENDENCIAS
            BIBLIOTECAS ADICIONADAS AO EAR POM PARA FAZER TESTES DE INTEGRACAO COM ARQUILIAN USANDO COMO BASE O EAR INTEIRO
        ######################################################################-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- ARQUILLIAN_DEPENDENCIAS -->
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>



    <build>
        <finalName>${project.parent.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <!-- Tell Maven we are using Java EE -->
                    <version>7</version>
                    <!-- Use Java EE ear libraries as needed. Java EE ear libraries
                        are in easy way to package any libraries needed in the ear, and automatically
                        have any modules (EJB-JARs and WARs) use them -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <modules>
                        <!-- Default context root of the web app is /kitchensink-ear-web.
                        If a custom context root is needed, uncomment the following snippet to
                        register our War as a web module and set the contextRoot property -->
                        <!--
                    <webModule>
                        <groupId>org.jboss.eap.quickstarts</groupId>
                        <artifactId>kitchensink-ear-web</artifactId>
                        <contextRoot>/kitchensink-ear</contextRoot>
                    </webModule>
                    -->
                    </modules>
                    <fileNameMapping>no-version</fileNameMapping>
                </configuration>
            </plugin>
            <!-- The WildFly plug-in deploys your ear to a local JBoss EAP container.
                Due to Maven's lack of intelligence with EARs we need to configure
                the WildFly Maven plug-in to skip deployment for all modules. We then enable
                it specifically in the ear module. -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
